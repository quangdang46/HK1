# -*- coding: utf-8 -*-
"""Lab06_part2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/191xImxKawltxKlLhNf03vQcolivabgMt
"""

## Bài 6
## cau6 
from sympy import *
import math
import numpy as np
import matplotlib.pyplot as plt
n = symbols("n")


# a) a_n = 1 - 0.2^n 
n = 5 
fa = []
print ("cau6cau6a:")
for i in range(n) :
  fa.append(1 - pow(0.2,i))
print ("{}".format(fa))

# b) a_n = 2*n/(n^2 + 1) 
n = 5 
fb = []
print ("cau6b:")
for i in range(n) :
  fb.append( (2*i)/(pow(i,2) + 1))
print ("{}".format(fb))

# c) a_n = (-1)^(n-1)/5^n
n = 5 
fc = []
print ("cau6c:")
for i in range(n) :
  fc.append( (-1)**(i-1)/5**i )
print ("{}".format(fc))

# d) a_n = 1/(n+1)! 
n = 5 
fd = []
print ("cau6d:")
for i in range(n) :
  fd.append(1/factorial(i+1))
print ("{}".format(fd))

# e) a_1 = 1 and a_(n+1) = 5*a_n -3 
n = 5 
a1 = 1 
fe = []
print ("cau6e:")
for i in range(n) :
  a2 = 5*a1 - 3 
  a1 = a2 
  fe.append( a2 )
print ("{}".format(fe))

# f) a_1 = 2 and a_(n+1) = a_n/(a_n + 1) 
n = 5 
a1 = 2 
ff = []
print ("cau6f:")
for i in range(n) :
  a2 = a1/(a1 + 1) 
  a1 = a2 
  ff.append( a2 )
print ("{}".format(ff))

## bài 7
print("bài 7:")

import math
from sympy import *
import numpy as np
import matplotlib.pyplot as plt

print("Cau a")
n=symbols("n")
fa=1-(-2/exp(1))**n
val=np.arange(-40,40)
yval =lambdify(n,fa,"numpy") (val)
plt.plot(val,yval)
plt.show()

print("Cau b")
n=symbols("n")
fb=sqrt(n)*sin(pi/sqrt(n))
val=np.arange(-40,40)
yval =lambdify(n,fb,"numpy") (val)
plt.plot(val,yval)
plt.show()

print("Cau c")
n=symbols("n")
fc=sqrt((3+n**2)/(8*n**2+n))
val=np.arange(-40,40)
yval =lambdify(n,fc,"numpy") (val)
plt.plot(val,yval)
plt.show()

print("Cau d")
n=symbols("n")
fd=(n**2*cos(n))/(1+n**2)
val=np.arange(-40,40)
yval =lambdify(n,fd,"numpy") (val)
plt.plot(val,yval)
plt.show()

import math
from sympy import *
import numpy as np
import matplotlib.pyplot as plt

## cau 7

def sum(n):
    ni=np.arange(1,n+1,1)
    s=1
    for i in ni:
        s=s*(2*i-1)
    return s
print("Cau e")
val=np.arange(1,10)
yn=[]
for i in range(1,10,1):
    yn.append(sum(i)/factorial(i))
plt.plot(val,yn,"-o")
plt.show()

print("cau f:")

ym = []
for i in range(1,10,1):
  ym.append(sum(i)/(2*i)**i)
plt.plot(val,ym,"-o")
plt.show()

#EXE 8
# a) f(x) = exp(x) , a = 0
print("Câu 8a) ")
x = symbols("x")
fx = exp(x)
fa = fx.subs(x,0)
for i in range(0,4,1):
    fta = (diff(fx,x,i).subs(x,0)/math.factorial(i))*(x-0)**i
    fa = fa + fta
    print("{}".format(fa))

print("Câu b")
x=symbols("x")
fb= sin(x)
fbbb=fb.subs(x,0)
for i in range(0,4,1):
    ftb=(diff(fb,x,i).subs(x,0)/math.factorial(i))*(x-0)**i
    fbbb=fbbb+ftb
    print("bac {}: {}".format(i,fbbb))


print("Câu c")
x=symbols("x")
fc=log(x)
fcc=fc.subs(x,1)
for i in range(0,4,1):
    ftc=(diff(fc,x,i).subs(x,1)/math.factorial(i))*(x-1)**i
    fcc=fcc+ftc
    print("tai {}: {}".format(i,fcc))


print("Câu d")
x=symbols("x")
fd=1/x
fdd=fd.subs(x,2)
for i in range(0,4,1):
    ftd=(diff(fd,x,i).subs(x,2)/math.factorial(i))*(x-2)**i
    fdd=fdd+ftd
    print("bac {}: {}".format(i,fdd))

## Bài 9
## ex9
# a) x_i = x_(i-1) + x_(i-2) 
print ("cau9a:")
def fibonacci(n):
    if (n < 0):
        return -1;
    elif (n == 0 or n == 1):
        return n;
    else:
        return fibonacci(n - 1) + fibonacci(n - 2);
print(fibonacci(8))

print("câu 9b")
phi = 1.618034
n = 8
xb = (phi**i - (1-phi)**i)/sqrt(5) 
print ("{}".format(xb))

# c) x_i = x_(i-1)*phi
print("câu 9c")
fc = []
n = 4
a = 1
def xitru1(i):
  return i-1
for i in range (n) :
  a = xitru1(i)
  xc = a*phi
  a = xc 
  fc.append(xc)
print ("{}".format(fc))

### Bài 10
from sympy import *
import math
import numpy as np
import matplotlib.pyplot as plt


print("Câu 10")
x = 0
y = 0
d = 2
alpha = 90
alpha_c = 0
F = "F + F - F - F + F"
r0 = F
d2r = math.pi/180
n = 5
F_new = F
j = 0
while j<n:
  F_new = F.replace("F",r0)
  F = F_new
  j = j+1
Px = [x]
Py = [y]
for i in F:
  if i == "F":
    x = x - d*math.cos(alpha_c*d2r)
    y = y - d*math.sin(alpha_c*d2r)
    Px.append(x)
    Py.append(y)
  elif i == "+":
    alpha_c = alpha_c + alpha
  elif i == "-":
    alpha_c = alpha_c - alpha
fg = plt.figure()
plt.plot(Px,Py,'b')
plt.show()

print("Câu 10")
x = 0
y = 0
d = 2
alpha = 45
alpha_c = 0
F = "F[+F][-F]"
r0 = F
d2r = math.pi/180
n = 5
F_new = F
j = 0
while j<n:
  F_new = F.replace("F",r0)
  F = F_new
  j = j+1
Px = [x]
xt = []
yt = []
Py = [y]
for i in F:
  if i == "F":
    x = x - d*math.cos(alpha_c*d2r)
    y = y - d*math.sin(alpha_c*d2r)
    Px.append(x)
    Py.append(y)
  elif i == "+":
    alpha_c = alpha_c + alpha
  elif i == "-":
    alpha_c = alpha_c - alpha
  elif i == "[":
      xt  .append(Px[-1])
      yt.append(Py[-1])
  #] : lấy tọa độ điểm được lưu trước đó trong mảng, thay thế cho tọa độ điểm hiện tại
  elif i == "]":
      Px[-1]=xt[-1]
      Py[-1]=yt[-1]
fg = plt.figure()
plt.plot(Px,Py,'b')
plt.show()