# -*- coding: utf-8 -*-
"""LAB02_7_VA_10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_YixZrUFrKjF2zQ6U6zMuU7txcSL0Ht_
"""

#### EXP 7
import math
import matplotlib.pyplot as plt
import numpy as np
from sympy import *

t = symbols(" t ")
x = 4 *sin(t)**5 + 5
y = 3 * cos(t) - 1.7*cos(2*t) - cos(3*t) + 1

t1 = np.arange(-3,3,0.1)
fx_val = lambdify(t,x,"numpy")(t1)
fy_val = lambdify(t,y,"numpy")(t1)

plt.plot(fx_val,fy_val,"r")
plt.grid()
plt.show()



#### exp 10:
import math
import matplotlib.pyplot as plt
import numpy as np
from sympy import *


#### cau 10 a:
k2 = x**2 + 2
k4 = x**2 + 4
k6 = x**2 + 6
k8 = x**2 + 8
k10 = x**2 + 10
k12 = x**2 + 12

f2 = lambdify(x,k2,"numpy")(val_x)
f4 = lambdify(x,k4,"numpy")(val_x)
f6 = lambdify(x,k6,"numpy")(val_x)
f8 = lambdify(x,k8,"numpy")(val_x)
f10 = lambdify(x,k10,"numpy")(val_x)
f12 = lambdify(x,k12,"numpy")(val_x)

plt.plot(f2,'r')
plt.plot(f4,'b')
plt.plot(f6,'b')
plt.plot(f8,'g')
plt.plot(f10,'black')
plt.plot(f12,'r')
plt.grid()
plt.show()

import math
import matplotlib.pyplot as plt
import numpy as np
from sympy import *
####  10  CAU B:

### cau b:
x = np.arange(-10,10,0.1)
f10_b = lambda x, k: (x+k)**2
k = np.linspace(2,12,6)

for i in k:
  plt.plot(x,f10_b(x,i))
plt.grid()
plt.show()

import math
import matplotlib.pyplot as plt
import numpy as np
from sympy import *
####  10  CAU c:

### cau c:
x = np.arange(-10,10,0.1)
f10_c = lambda x, k: k*x**(1/2)
k = np.linspace(1/3,6,4)

for i in k:
  plt.plot(x,f10_c(x,i))
plt.show()

### d:
import math
import matplotlib.pyplot as plt
import numpy as np
from sympy import *
####  10  CAU e:

x = symbols("x")

val_x = np.arange(-10,10,0.1)

left1 = (x+1)**3 -1
down1 = x**3 

f1 = lambdify(x,left1,"numpy")(val_x)
f2 = lambdify(x,down1,"numpy")(val_x)

plt.plot(f1,'r')
plt.plot(f2,'b')


plt.grid()
plt.show()

### e:
import math
import matplotlib.pyplot as plt
import numpy as np
from sympy import *
####  10  CAU e:

x = symbols("x")

val_x = np.arange(-5,5,0.1)

right1 = (x-1)**(2/3) -1
down1 = x**(2/3) 

f1 = lambdify(x,right1,"numpy")(val_x)
f2 = lambdify(x,down1,"numpy")(val_x)

plt.plot(f1,'r')
plt.plot(f2,'b')


plt.grid()
plt.show()

import math
import matplotlib.pyplot as plt
import numpy as np
from sympy import *
####  10  CAU f:

x = symbols("x")

val_x = np.arange(-10,10,0.1)

right1 = 1/2*x -5
down5 = 1/2*(x-1) 

f1 = lambdify(x,right1,"numpy")(val_x)
f2 = lambdify(x,down5,"numpy")(val_x)

plt.plot(f1,'r')
plt.plot(f2,'b')


plt.grid()
plt.show()

import math
import matplotlib.pyplot as plt
import numpy as np
from sympy import *
####  10  CAU g:

x = symbols("x")

val_x = np.arange(-4,4,0.1)

left2andown1 = 1/(x+2)**2 - 1
fx = 1/x**2 

f1 = lambdify(x,fx,"numpy")(val_x)
f2 = lambdify(x,left2andown1,"numpy")(val_x)

plt.plot(f1,'r')
plt.plot(f2,'b')


plt.grid()
plt.show()

#### c√¢u h:

import math
import matplotlib.pyplot as plt
import numpy as np
from sympy import *
####  10  CAU h:

x = symbols("x")

val_x = np.arange(-4,4,0.1)

fx = 1-x**3
fx2 = (1-x**3)/2

f1 = lambdify(x,fx,"numpy")(val_x)
f2 = lambdify(x,fx2,"numpy")(val_x)

plt.plot(f1,'r')
plt.plot(f2,'b')

plt.show()

import math
import matplotlib.pyplot as plt
import numpy as np
from sympy import *
####  10  CAU i:

x = symbols("x")

val_x = np.arange(-100,100,0.1)

fx = sqrt(x+1)
fx4 = 4*sqrt(x+1)

f1 = lambdify(x,fx,"numpy")(val_x)
f2 = lambdify(x,fx4,"numpy")(val_x)

plt.plot(f1,'r')
plt.plot(f2,'b')

plt.show()

