# -*- coding: utf-8 -*-
"""LAB05_part2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nnVBndLAR3-LCD1CxRPktxuEk3Z9J2M8
"""

########### câu 11
from sympy import *
import math
import numpy as np
import matplotlib.pyplot as plt
x, h, t= symbols("x h t")



# câu a:
f0 = 0;
fa = x*sin(1/x)
lima = (fa.subs(x,h)-f0)/h

fphaya = limit(lima,h,0)
fphaya

if f0 == fphaya :
  print("yes")
else:
  print("no")

# câu b:
fb = x**2*sin(1/x)
limb = (fb.subs(x,h)-f0)/h

fphayb = limit(limb,h,0)
fphayb

if f0 == fphayb :
  print("yes")
else:
  print("no")

# câu 12
from sympy import *
import math
import numpy as np
import matplotlib.pyplot as plt
x, h= symbols("x h")

cx = x**3 -6*x**2 + 15*x
cphay = diff(cx,x,1)
cost = cphay.subs(x,10)
print("it cost {} dollar to produce one more radiator ".format(cost))

# câu 13
rx = 20000*(1-1/x)
rphay = diff(rx,x,1)
doanhthu = rphay.subs(x,100)
print("doanh thu ban 100 may la {} dollar".format(doanhthu))

# câu 14
x, h, t= symbols("x h t")
bt = 10**6 + 10**4*t - 10**3*t**2
bphay = diff(bt,t)
ta = 0
tb = 5
tc = 10
tocdoa = bphay.subs(t,ta)
tocdob = bphay.subs(t,tb)
tocdoc = bphay.subs(t,tc)

print("toc do 0h la {}".format(tocdoa))
print("toc do 5h la {}".format(tocdob))
print("toc do 10h la {}".format(tocdoc))

# câu 15:
x, h, t= symbols("x h t")
s = 24*t - 0.8 * t**2
vantoc = diff(s,t)
giatoc = diff(vantoc,t)
print("van toc la {}".format(vantoc))
print("gia toc la {}".format(giatoc))

thoigian = solve(vantoc,t)

print("thời gian lên cao nhất là {}s khi vận tốc bằng 0 ".format(thoigian))
height = s.subs(t,15)
print("tảng đá cao {} m".format(height))

def NewTon(fn,dfn,x,tol,max):
  for i in range(max):
    xnew = x - fn(x)/dfn(x)
    if abs(xnew-x) < tol : break
    x = xnew
  return xnew, i

print("câu a: ")
fa = lambda x: 2*x**3 +3*x -1
dfa = lambda x: 6*x**2 + 3
NewTon(fa,dfa,2,0.01,100)
print("the root is %f at %d iteration." %(xnew,i))

def NewTon(fn,dfn,x,tol,max):
  for i in range(max):
    xnew = x - fn(x)/dfn(x)
    if abs(xnew-x) < tol : break
    x = xnew
  return xnew, i

print("câu a: ")
fa = lambda x: 2*x**3 +3*x -1
dfa = lambda x: 6*x**2 + 3
print("the root is %f at %d iteration." %(xnew,i))

#EXP 10: Determine the differentiable function or not
# b)
from sympy import *
import math;
import matplotlib.pyplot as plt
import numpy as np

x = symbols('x')
h = symbols('h')
fb1=-(x+2)
fb2=(x+2)
x0=-2
gb1=(fb1.subs(x,x0+h)-fb1.subs(x,x0))/h
lib1=limit(gb1,h,0)
gb2=(fb2.subs(x,x0+h)-fb2.subs(x,x0))/h
lib2=limit(gb2,h,0)
if (lib1 == AccumBounds(-1,1) or lib2 == AccumBounds(-1,1)):
  print("10b) Not differentiable function")
else:
  print("10b) Differentiable function")